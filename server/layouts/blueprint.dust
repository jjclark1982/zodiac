FORMAT: 1A
HOST: {host}

# {packageDef.name} API
{packageDef.description}

{#modelDefs}
# Group {modelName}

## {modelName} [{proto.urlRoot}/{~lb}{proto.idAttribute}{~rb}]
A single {modelName} object with all its details

+ Parameters
    + {proto.idAttribute} (required, string, `{example.id}`) ... `{proto.idAttribute}` of the {modelName} to perform action with. Has example proto.

+ Model (application/json)
    + Header

            Location: {example.url}
            Last-Modified: Sat, 01 Jan 2000 12:34:56 GMT
            X-Riak-Meta-Modified-By: exampleUser
            X-Riak-Vclock: a85hYGBgcypz/fgbpe0TfpYvCwA=
            X-DB-Query-Time: 5ms
            X-Response-Time: 10ms

    + Body

            {example|js|s}

    + Schema

            {#proto.fields}{name}: {type}
            {/proto.fields}

### Retrieve a {modelName} [GET]
+ Response 200

    [{modelName}][]


### Update a {modelName} [PUT]
+ Request (application/json)

        {example|js|s}

+ Response 200

    [{modelName}][]

### Partially update a {modelName} [PATCH]
+ Request (application/json)

        {"{proto.titleAttribute}": "{example.title}"}

+ Response 200

    [{modelName}][]

### Delete a {modelName} [DELETE]
+ Response 204

## {modelName} Collection [{proto.urlRoot}]
A list of {modelName} objects

### List all {modelName}s [GET]
+ Response 200 (application/json)

        [
            {example|js|s},
            {example2|js|s}
        ]

### Create a {modelName} [POST]
+ Request (application/json)

        {exampleNew|js|s}

+ Response 201 (application/json)

        [{modelName}][]

## {modelName} Search [{proto.urlRoot}{~lb}?query,order,offset,limit{~rb}]
### Search for items that match specified parameters [GET]

+ Parameters
    + query (optional, string) ... Format varies with model's `index` function
    + order (optional, string) ... Comma-separated names of fields to sort by
    + offset (optional, number) ... Number of items to skip for pagination
    + limit (optional, number) ... Number of items to show for pagination

+ Response 200 (application/json)

        [
            {example|js|s},
            {example2|js|s}
        ]

{#proto.fields}{@if test=type is="link"}
## {modelName} "{name}" link [{proto.urlRoot}/{~lb}{proto.idAttribute}{~rb}/{name}]
### Retrieve a {modelName}'s {name} [GET]
+ Response 200
{! TODO: link to the target type by its name !}
{/if}{/proto.fields}

{/modelDefs}
