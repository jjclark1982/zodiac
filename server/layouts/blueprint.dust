FORMAT: 1A
HOST: {host}

# {packageDef.name} API
{packageDef.description}

{@keyvalue object=modelProtos}
## {key} Collection [{value.urlRoot}]
### List all {key}s [GET]
+ Response 200 (application/json)

        [{
            "{value.idAttribute}": "1", "{value.titleAttribute}": "foo"
        }, {
            "{value.idAttribute}": "2", "{value.titleAttribute}": "bar"
        }]

### Create a {key} [POST]
+ Request (application/json)

        {"{value.titleAttribute}": "baz"}

+ Response 201 (application/json)

        {"{value.idAttribute}": 3, "{value.titleAttribute}": "baz"}

## {key} [{value.urlRoot}/{~lb}{value.idAttribute}{~rb}]
A single {key} object with all its details

+ Parameters
    + {value.idAttribute} (required, string, `"123"`) ... `{value.idAttribute}` of the {key} to perform action with. Has example value.

+ Model
    + Header

            Location: Canonical url for this {key}
            Last-Modified: Date of last edit
            X-Riak-Meta-Modified-By: user responsible for last edit
            X-Riak-Vclock: Vector clock used for conflict detection and resolution
            X-DB-Query-Time: Number of milliseconds it took the database to return this data

    + Body

            {
                {#value.fields}"{name}": <{type}>{@last}{:else},
                {/last}{/value.fields}
            }

### Retrieve a {key} [GET]
+ Response 200 (application/json)

    [{key}][]


### Update a {key} [PUT]
+ Request (application/json)

        {
            {#value.fields}{@if test=type isnt="id"}"{name}": <{type}>{@last}{:else},
            {/last}{/if}{/value.fields}
        }

+ Response 200 (application/json)

    [{key}][]

### Partially update a {key} [PATCH]
Only transmitted attributes will be modified.
+ Request (application/json)

        {
            "{value.titleAttribute}": "example"
        }

+ Response 200 (application/json)

    [{key}][]

### Delete a {key} [DELETE]
+ Response 204

{#value.fields}{@if test=type is="link"}
## {key} "{name}" link [{value.urlRoot}/{~lb}{value.idAttribute}{~rb}/{name}]
### Retrieve a {key}'s {name} [GET]
+ Response 200
{! TODO: link to the target type by its key !}
{/if}{/value.fields}

{/keyvalue}
